<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="korit.com.make_fitness.mapper.ClassMapper">

    <resultMap id="ClassResultMap" type="korit.com.make_fitness.entity.Class">
        <id property="classId" column="class_id"/>
        <result property="userId" column="user_id"/>
        <result property="classSubjectId" column="class_subject_id"/>
        <result property="classTime" column="class_time"/>
        <result property="classMaxCustomer" column="class_max_customer"/>
        <result property="classCustomerReserve" column="class_customer_reserve"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <association property="user" javaType= "korit.com.make_fitness.entity.User" resultMap="korit.com.make_fitness.mapper.UserMapper.UserResultMap" />

        <association property="classSubject" javaType="korit.com.make_fitness.entity.ClassSubject">
            <id property="classSubjectId" column="s_class_subject_id"/>
            <result property="classSubjectName" column="class_subject_name"/>
        </association>
    </resultMap>



    <insert id="insertClass" keyProperty="classId" useGeneratedKeys="true">
        insert into class_tb
        values (default, #{userId}, #{classSubjectId}, DATE_FORMAT(#{classTime}, '%Y-%m-%d %H'), #{classMaxCustomer}, #{classCustomerReserve}, now(), now())
    </insert>

    <update id="increaseCustomerReserve">
        UPDATE class_tb
        SET class_customer_reserve = class_customer_reserve + 1
        WHERE class_id = #{classId}
    </update>

    <update id="decreaseCustomerReserve">
        UPDATE class_tb
        SET class_customer_reserve = GREATEST(0, class_customer_reserve - 1)
        WHERE class_id = #{classId}
    </update>

    <delete id="deleteClassById">
        delete from class_tb
        where class_id = #{classId}
    </delete>

    <select id="findAllUserAndSubject" resultMap="ClassResultMap">
        SELECT
            c.class_id,
            c.user_id,
            s.class_subject_name,
            c.class_time,
            c.class_max_customer,
            c.class_customer_reserve,
            u.nickname,
            u.ph,
            u.gender
        FROM class_tb c
            LEFT JOIN user_tb u ON c.user_id = u.user_id
            LEFT JOIN class_subject_tb s ON c.class_subject_id = s.class_subject_id
    </select>

    <select id="findFiltered" resultMap="ClassResultMap">
        select
            c.class_id,
            c.user_id,
            c.class_subject_id as s_class_subject_id,
            s.class_subject_name,
            c.class_time,
            c.class_max_customer,
            c.class_customer_reserve,
            c.created_at,
            c.updated_at,
            u.nickname,
            u.ph,
            u.gender
        from
            class_tb c
            left join user_tb u on c.user_id = u.user_id
            left join class_subject_tb s on c.class_subject_id = s.class_subject_id
        where
            1=1
        <if test="subject != null and subject != ''">
            and s.class_subject_name = #{subject}
        </if>
        <if test="manager != null and manager != ''">
            and u.nickname like concat('%', #{manager}, '%')
        </if>
    </select>

    <select id="findById" resultMap="ClassResultMap">
        select
            c.class_id,
            c.user_id,
            c.class_subject_id as s_class_subject_id,
            s.class_subject_name,
            c.class_time,
            c.class_max_customer,
            c.class_customer_reserve,
            c.created_at,
            c.updated_at,
            u.nickname,
            u.ph,
            u.gender
        from
            class_tb c
            left join user_tb u on c.user_id = u.user_id
            left join class_subject_tb s on c.class_subject_id = s.class_subject_id
        where
            c.class_id = #{classId}
    </select>

    <select id="findClassWithReservations" resultType="korit.com.make_fitness.dto.response.RespClassReservationRow">
        select
            c.class_id            AS classId,
            c.class_time          AS classTime,
            cs.class_subject_name AS subject,
            c.class_max_customer  AS maxCustomer,
            c.class_customer_reserve AS currentCustomer,
            u.nickname            AS reservedMember
        from
            class_tb c
            JOIN class_subject_tb cs ON c.class_subject_id = cs.class_subject_id
            LEFT JOIN reservation_tb r ON c.class_id = r.class_id
            LEFT JOIN membership_tb m ON r.membership_id = m.membership_id
            LEFT JOIN user_tb u ON m.user_id = u.user_id
        where
            c.user_id = #{managerId}
            order by c.class_time ASC
    </select>

</mapper>