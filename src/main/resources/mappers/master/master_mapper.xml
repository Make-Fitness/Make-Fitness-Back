<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="korit.com.make_fitness.mapper.MasterMapper">

    <!-- 매니저 응답 매핑 -->
    <resultMap id="ManagerResultMap" type="korit.com.make_fitness.dto.response.RespManagerDto">
        <id property="managerId" column="manager_id" />
        <result property="nickname" column="nickname" />
        <result property="gender" column="gender" />
        <result property="ph" column="ph" />
        <result property="classMemberCount" column="class_member_count" />
        <result property="classSessionCount" column="class_session_count" />
    </resultMap>

    <resultMap id="SalesResultMap" type="korit.com.make_fitness.dto.response.RespSalesDto">
        <result column="date" property="date"/>
        <result column="total_amount" property="totalAmount"/>
        <result column="pt_total_amount" property="ptTotalAmount"/>
        <result column="plt_total_amount" property="pltTotalAmount"/>
        <result column="ht_total_amount" property="htTotalAmount"/>
    </resultMap>

    <resultMap id="respSalesDtoMap" type="korit.com.make_fitness.dto.response.RespSalesDto">
        <result column="date" property="date"/>
        <result column="total_amount" property="totalAmount"/>
        <result column="pt_total_amount" property="ptTotalAmount"/>
        <result column="plt_total_amount" property="pltTotalAmount"/>
        <result column="ht_total_amount" property="htTotalAmount"/>
    </resultMap>

    <!-- 유저 권한 변경 -->
    <update id="updateRoleName">
        UPDATE user_tb
        SET role_name = #{roleName}
        WHERE user_id = #{userId}
    </update>

    <!-- 매니저 삭제 -->
    <delete id="deleteManager">
        DELETE FROM user_tb
        WHERE role_name = #{roleName}
        AND user_id = #{userId}
    </delete>

    <!-- 매니저 목록 조회 -->
    <select id="findManager" resultMap="ManagerResultMap">
        SELECT
        u.user_id AS manager_id,
        u.nickname AS nickname,
        u.gender AS gender,
        u.ph AS ph,
        COUNT(DISTINCT p.user_id) AS class_member_count,
        COUNT(DISTINCT c.class_id) AS class_session_count
        FROM user_tb u
        LEFT JOIN class_tb c
        ON u.user_id = c.user_id
        AND DATE_FORMAT(c.class_time, '%Y-%m') = DATE_FORMAT(#{classTime}, '%Y-%m')
        LEFT JOIN reservation_tb r
        ON r.class_id = c.class_id
        LEFT JOIN membership_tb m
        ON r.membership_id = m.membership_id
        LEFT JOIN pay_tb p
        ON u.user_id = p.manager_id
        WHERE u.role_name = 'ROLE_MANAGER'
        GROUP BY u.user_id
        ORDER BY u.user_id
    </select>


    <!-- 회원 목록 조회 (닉네임 검색 포함) -->
    <select id="findByNickname" resultType="korit.com.make_fitness.dto.response.RespMemberListDto">
        SELECT
        u.nickname,
        u.user_id,
        u.ph,
        u.gender,
        u.created_at,
        u.role_name,
        COALESCE(p.promotion_name, '없음') AS promotionName,
        COALESCE(m.promotion_session_count, 0) AS promotionSessionCount,
        COALESCE(m.expired_date, NOW()) AS expiredDate
        FROM user_tb u
        LEFT JOIN membership_tb m ON m.user_id = u.user_id
        LEFT JOIN promotion_tb p ON m.promotion_id = p.promotion_id
        <where>
            <if test="name != null and name != ''">
                u.nickname LIKE CONCAT('%', #{name}, '%')
            </if>
        </where>
    </select>

    <!-- 날짜별 매출 조회 -->
    <select id="findByStartAndEndDate" resultMap="respSalesDtoMap">
        WITH RECURSIVE date_series AS (

        SELECT DATE(STR_TO_DATE(#{startDate}, '%Y-%m-%d')) AS ds_date
        UNION ALL

        SELECT ds_date + INTERVAL 1 DAY
        FROM date_series

        WHERE not ds_date = STR_TO_DATE(#{endDate}, '%Y-%m-%d')
        )
        SELECT
        ds.ds_date AS date,
        IFNULL(SUM(pt.payment_amount), 0) AS total_amount,
        SUM(IF(pmt2.promotion_id IS NOT NULL, pt.payment_amount, 0)) AS pt_total_amount,
        SUM(IF(pmt.promotion_id IS NOT NULL, pt.payment_amount, 0)) AS plt_total_amount,
        SUM(IF(pmt3.promotion_id IS NOT NULL, pt.payment_amount, 0)) AS ht_total_amount
        FROM
        date_series ds
        LEFT OUTER JOIN pay_tb pt
        ON ds.ds_date = DATE(pt.created_at)
        LEFT OUTER JOIN promotion_tb pmt
        ON pmt.promotion_id = pt.promotion_id
        AND pmt.class_subject_id = 2
        LEFT OUTER JOIN promotion_tb pmt2
        ON pmt2.promotion_id = pt.promotion_id
        AND pmt2.class_subject_id = 1
        LEFT OUTER JOIN promotion_tb pmt3
        ON pmt3.promotion_id = pt.promotion_id
        AND pmt3.class_subject_id = 0
        GROUP BY
        ds.ds_date
        ORDER BY
        ds.ds_date;
    </select>

    <select id="findSales" resultMap="SalesResultMap">
        WITH RECURSIVE date_series AS (
        -- 시작 날짜를 기준으로, 첫 번째 날짜부터 마지막 날짜까지 생성
        SELECT DATE(STR_TO_DATE(#{startDate}, '%Y-%m-%d')) AS ds_date
        UNION ALL

        SELECT ds_date + INTERVAL 1 DAY
        FROM date_series

        WHERE not ds_date = LAST_DAY(STR_TO_DATE(#{startDate}, '%Y-%m-%d'))
        )
        SELECT
        ds.ds_date + INTERVAL 1 DAY AS date,
        IFNULL(SUM(pt.payment_amount), 0) AS total_amount,
        SUM(IF(pmt2.promotion_id IS NOT NULL, pt.payment_amount, 0)) AS pt_total_amount,
        SUM(IF(pmt.promotion_id IS NOT NULL, pt.payment_amount, 0)) AS plt_total_amount,
        SUM(IF(pmt3.promotion_id IS NOT NULL, pt.payment_amount, 0)) AS ht_total_amount
        FROM
        date_series ds
        LEFT OUTER JOIN pay_tb pt
        ON ds.ds_date = DATE(pt.created_at)
        LEFT OUTER JOIN promotion_tb pmt
        ON pmt.promotion_id = pt.promotion_id
        AND pmt.class_subject_id = 2
        LEFT OUTER JOIN promotion_tb pmt2
        ON pmt2.promotion_id = pt.promotion_id
        AND pmt2.class_subject_id = 1
        LEFT OUTER JOIN promotion_tb pmt3
        ON pmt3.promotion_id = pt.promotion_id
        AND pmt3.class_subject_id = 0
        GROUP BY
        ds.ds_date
        ORDER BY
        ds.ds_date
    </select>


</mapper>
